{"code":"import * as tf from '@tensorflow/tfjs-core';\r\nexport function createVertexProgram(gl, vertexShaderSource, fragmentShaderSource) {\r\n    var vertexShader = tf.webgl.webgl_util.createVertexShader(gl, vertexShaderSource);\r\n    var fragmentShader = tf.webgl.webgl_util.createFragmentShader(gl, fragmentShaderSource);\r\n    var program = tf.webgl.webgl_util.createProgram(gl);\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, vertexShader); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.attachShader(program, fragmentShader); });\r\n    tf.webgl.webgl_util.linkProgram(gl, program);\r\n    tf.webgl.webgl_util.validateProgram(gl, program);\r\n    return program;\r\n}\r\nexport function createAndConfigureInterpolatedTexture(gl, width, height, numChannels, pixels) {\r\n    tf.webgl.webgl_util.validateTextureSize(gl, width, height);\r\n    var texture = tf.webgl.webgl_util.createTexture(gl);\r\n    var tex2d = gl.TEXTURE_2D;\r\n    var internalFormat = getTextureInternalFormat(gl, numChannels);\r\n    var format = getTextureFormat(gl, numChannels);\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.bindTexture(tex2d, texture); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.LINEAR); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.LINEAR); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, format, getTextureType(gl), pixels); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\r\n    return texture;\r\n}\r\nexport function createAndConfigureTexture(gl, width, height, numChannels, pixels) {\r\n    tf.webgl.webgl_util.validateTextureSize(gl, width, height);\r\n    var texture = tf.webgl.webgl_util.createTexture(gl);\r\n    var tex2d = gl.TEXTURE_2D;\r\n    var internalFormat = getTextureInternalFormat(gl, numChannels);\r\n    var format = getTextureFormat(gl, numChannels);\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.bindTexture(tex2d, texture); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, format, getTextureType(gl), pixels); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\r\n    return texture;\r\n}\r\nexport function createAndConfigureUByteTexture(gl, width, height, numChannels, pixels) {\r\n    tf.webgl.webgl_util.validateTextureSize(gl, width, height);\r\n    var texture = tf.webgl.webgl_util.createTexture(gl);\r\n    var tex2d = gl.TEXTURE_2D;\r\n    var internalFormat = getTextureInternalUByteFormat(gl, numChannels);\r\n    var format = getTextureFormat(gl, numChannels);\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.bindTexture(tex2d, texture); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.texImage2D(tex2d, 0, internalFormat, width, height, 0, format, getTextureTypeUByte(gl), pixels); });\r\n    tf.webgl.webgl_util.callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\r\n    return texture;\r\n}\r\nfunction getTextureInternalFormat(gl, numChannels) {\r\n    if (numChannels === 4) {\r\n        return gl.RGBA32F;\r\n    }\r\n    else if (numChannels === 3) {\r\n        return gl.RGB32F;\r\n    }\r\n    else if (numChannels === 2) {\r\n        return gl.RG32F;\r\n    }\r\n    return gl.R32F;\r\n}\r\nfunction getTextureInternalUByteFormat(gl, numChannels) {\r\n    if (numChannels === 4) {\r\n        return gl.RGBA8;\r\n    }\r\n    else if (numChannels === 3) {\r\n        return gl.RGB8;\r\n    }\r\n    else if (numChannels === 2) {\r\n        return gl.RG8;\r\n    }\r\n    return gl.R8;\r\n}\r\nfunction getTextureFormat(gl, numChannels) {\r\n    if (numChannels === 4) {\r\n        return gl.RGBA;\r\n    }\r\n    else if (numChannels === 3) {\r\n        return gl.RGB;\r\n    }\r\n    else if (numChannels === 2) {\r\n        return gl.RG;\r\n    }\r\n    return gl.RED;\r\n}\r\nfunction getTextureType(gl) {\r\n    return gl.FLOAT;\r\n}\r\nfunction getTextureTypeUByte(gl) {\r\n    return gl.UNSIGNED_BYTE;\r\n}\r\n//# sourceMappingURL=gl_util.js.map","map":"{\"version\":3,\"file\":\"gl_util.js\",\"sourceRoot\":\"\",\"sources\":[\"src/gl_util.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/usr/local/google/home/nsthorat/deeplearnjs-clients/tsne/tfjs-tsne/gl_util.d.ts","text":"export declare function createVertexProgram(gl: WebGLRenderingContext, vertexShaderSource: string, fragmentShaderSource: string): WebGLProgram;\r\nexport declare function createAndConfigureInterpolatedTexture(gl: WebGLRenderingContext, width: number, height: number, numChannels: number, pixels?: ArrayBufferView): WebGLTexture;\r\nexport declare function createAndConfigureTexture(gl: WebGLRenderingContext, width: number, height: number, numChannels: number, pixels?: ArrayBufferView): WebGLTexture;\r\nexport declare function createAndConfigureUByteTexture(gl: WebGLRenderingContext, width: number, height: number, numChannels: number, pixels?: ArrayBufferView): WebGLTexture;\r\n"}}
